import type { PostGrid, PostGridOptions, PostGridError } from './';
export interface Contact {
    id: string;
    object: string;
    live: boolean;
    description?: string;
    addressLine1?: string;
    addressLine2?: string;
    city?: string;
    provinceOrState?: string;
    postalOrZip?: string;
    country?: string;
    countryCode?: string;
    addressStatus: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    phoneNumber?: string;
    companyName?: string;
    jobTitle?: string;
    metadata?: any;
}
export interface ContactList {
    object: string;
    limit: number;
    skip: number;
    totalCount: number;
    data: Contact[];
}
export declare class ContactApi {
    client: PostGrid;
    baseRoute: string;
    constructor(client: PostGrid, options?: PostGridOptions);
    get(id: string): Promise<{
        success: boolean;
        contact?: Contact;
        error?: PostGridError;
    }>;
    list(limit?: number, skip?: number): Promise<{
        success: boolean;
        contacts?: ContactList;
        error?: PostGridError;
    }>;
    create(contact: {
        description?: string;
        addressLine1?: string;
        addressLine2?: string;
        city?: string;
        provinceOrState?: string;
        postalOrZip?: string;
        country?: string;
        countryCode?: string;
        firstName?: string;
        lastName?: string;
        email?: string;
        phoneNumber?: string;
        companyName?: string;
        jobTitle?: string;
        metadata?: any;
    }): Promise<{
        success: boolean;
        contact?: Contact;
        error?: PostGridError;
    }>;
    delete(id: string): Promise<{
        success: boolean;
        contact?: Contact;
        error?: PostGridError;
    }>;
}
